// tevent format is following
/*
{
  timestamp: Date.now(), // e.g. 1694567890123
  fromAddress: "0x1234567890abcdef1234567890abcdef12345678",
  fromOwner: '0x1234567890abcdef1234567890abcdef12345678', // optional
  toAddress: "0xabcdef1234567890abcdef1234567890abcdef12",
  toOwner: '0x1234567890abcdef1234567890abcdef12345678',     // optional
  amount: "1000000000000000000",  // string for big.Int
  tokenAddress: "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
  symbol: "USDT",
  chain: "Ethereum",
  network: "mainnet",
  txHash: "0xa1b2c3d4e5f67890123456789abcdef0123456789abcdef0123456789abcdef",
  decimals: 18,
  position: 42n
}
*/
const TelegramBot = require('node-telegram-bot-api');
const botToken = '// token generated by BotFather here';
const bot = new TelegramBot(botToken, {polling: true});

var subscribers = [];

// Anyone who messages the bot gets added
bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    if (!subscribers.includes(chatId)) {
        subscribers.push(chatId);
        bot.sendMessage(chatId, 'Added! You will get updates every 1 min');
    }
});

var stablecoins = ['USDC', 'USDT', 'DAI']

var senders = {}
var grouped = {};

var chains = {};

async function onTransfer(tevent) { // this will be invoked on every onchain transfer
    if (!stablecoins.includes(tevent.symbol)) {
        return;
    }
    var key = tevent.chain + " " + tevent.fromAddress + " " + tevent.symbol;

    var amt = BigInt(tevent.amount) / BigInt(1e6) // ignore fractional
    if (senders[key] === undefined) {
        senders[key] = {
            volume: BigInt(0),
            chain: tevent.chain,
            address: tevent.fromAddress,
            symbol: tevent.symbol,
            lastTx: tevent.txHash
        }
    }

    senders[key].volume += amt;
    senders[key].lastTx = tevent.txHash;

}

setInterval(() => {
    if (subscribers.length === 0) return;

    var grouped = {}
    for (const key of Object.keys(senders)) {
        const chain = key.split(" ");
        grouped[chain] = senders[key];
    }


    const sorted = Object.entries(senders)
        .sort((a, b) => b[1].volume > a[1].volume ? 1 : -1)
        .slice(0, 10);

    let msg = '<b>🏆 Top 10 Senders (1 min)</b>\n\n';

    sorted.forEach(([key, data], i) => {
        msg += `${i + 1}. <b>${data.chain.toUpperCase()} ${data.symbol}</b>\n`;
        msg += `   💰 Volume: $${data.volume.toLocaleString()}\n`;
        msg += `   👤 Address:\n   <code>${data.address}</code>\n`;
        msg += `   🔗 Last Tx:\n   <code>${data.lastTx}</code>\n\n`;
    });

    subscribers.forEach(chatId => {
        bot.sendMessage(chatId, msg, {parse_mode: 'HTML'});
    });

}, 60 * 1000);

module.exports = onTransfer;
